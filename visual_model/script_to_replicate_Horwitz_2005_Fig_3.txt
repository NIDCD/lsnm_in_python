# The following script replicates the results of Horwitz, Warner et al (2005), Figure 3.
#
# There are 6 trials total: 3 DMS trials and 3 control trials
#
# The DMS trials are MATCH, MISMATCH, MATCH. The attention parameter in DMS trials is 0.3
# The control trials are 'passive viewing': degraded shapes are presented and low attention (0.05)
# is used.
#
# The first 200 timesteps = 1000 ms we do nothing. We assume 1 timestep = 5 ms, as in Horwitz
# et al (2005)
#
# To maintain consistency with Husain et al (2004) and Tagamets and Horwitz (1998),
# we are assuming that each simulation timestep is equivalent to 5 milliseconds
# of real time. 
                
# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 200:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.3

    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # reset LGNS activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following stimulus is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.7
    modules['lgns'][8][4][4][0] = 0.7
    modules['lgns'][8][4][5][0] = 0.7
    modules['lgns'][8][4][6][0] = 0.7
    modules['lgns'][8][4][7][0] = 0.7
    modules['lgns'][8][4][8][0] = 0.7
    modules['lgns'][8][8][3][0] = 0.7
    modules['lgns'][8][8][4][0] = 0.7
    modules['lgns'][8][8][5][0] = 0.7
    modules['lgns'][8][8][6][0] = 0.7
    modules['lgns'][8][8][7][0] = 0.7
    modules['lgns'][8][8][8][0] = 0.7
    modules['lgns'][8][5][3][0] = 0.7
    modules['lgns'][8][6][3][0] = 0.7
    modules['lgns'][8][7][3][0] = 0.7
    modules['lgns'][8][5][8][0] = 0.7
    modules['lgns'][8][6][8][0] = 0.7
    modules['lgns'][8][7][8][0] = 0.7
                
# What follows is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 400:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 700:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following stimuuls is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.7
    modules['lgns'][8][4][4][0] = 0.7
    modules['lgns'][8][4][5][0] = 0.7
    modules['lgns'][8][4][6][0] = 0.7
    modules['lgns'][8][4][7][0] = 0.7
    modules['lgns'][8][4][8][0] = 0.7
    modules['lgns'][8][8][3][0] = 0.7
    modules['lgns'][8][8][4][0] = 0.7
    modules['lgns'][8][8][5][0] = 0.7
    modules['lgns'][8][8][6][0] = 0.7
    modules['lgns'][8][8][7][0] = 0.7
    modules['lgns'][8][8][8][0] = 0.7
    modules['lgns'][8][5][3][0] = 0.7
    modules['lgns'][8][6][3][0] = 0.7
    modules['lgns'][8][7][3][0] = 0.7
    modules['lgns'][8][5][8][0] = 0.7
    modules['lgns'][8][6][8][0] = 0.7
    modules['lgns'][8][7][8][0] = 0.7
    
# what follows now is an intertrial interval of 400 timesteps (1 second), which includes
# the response period.
if t == 900:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.25
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05


# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 1300:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.3

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.7
    modules['lgns'][8][4][4][0] = 0.7
    modules['lgns'][8][4][5][0] = 0.7
    modules['lgns'][8][4][6][0] = 0.7
    modules['lgns'][8][4][7][0] = 0.7
    modules['lgns'][8][4][8][0] = 0.7
    modules['lgns'][8][8][3][0] = 0.7
    modules['lgns'][8][8][4][0] = 0.7
    modules['lgns'][8][8][5][0] = 0.7
    modules['lgns'][8][8][6][0] = 0.7
    modules['lgns'][8][8][7][0] = 0.7
    modules['lgns'][8][8][8][0] = 0.7
    modules['lgns'][8][5][3][0] = 0.7
    modules['lgns'][8][6][3][0] = 0.7
    modules['lgns'][8][7][3][0] = 0.7
    modules['lgns'][8][5][8][0] = 0.7
    modules['lgns'][8][6][8][0] = 0.7
    modules['lgns'][8][7][8][0] = 0.7
                    
# What follows not is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 1500:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 1800:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.7
    modules['lgns'][8][3][1][0] = 0.7
    modules['lgns'][8][3][2][0] = 0.7
    modules['lgns'][8][3][3][0] = 0.7
    modules['lgns'][8][3][4][0] = 0.7
    modules['lgns'][8][3][5][0] = 0.7
    modules['lgns'][8][3][6][0] = 0.7
    modules['lgns'][8][3][7][0] = 0.7
    modules['lgns'][8][3][8][0] = 0.7
    modules['lgns'][8][2][6][0] = 0.7
    modules['lgns'][8][2][7][0] = 0.7
    modules['lgns'][8][1][6][0] = 0.7
    modules['lgns'][8][1][7][0] = 0.7
    modules['lgns'][8][0][6][0] = 0.7
    modules['lgns'][8][0][7][0] = 0.7
                     
# what follows now is an intertrial interval of 400 timesteps (2 second), which includes
# the response period.
if t == 2000:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.25
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05

# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 2400:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.3

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.7
    modules['lgns'][8][3][1][0] = 0.7
    modules['lgns'][8][3][2][0] = 0.7
    modules['lgns'][8][3][3][0] = 0.7
    modules['lgns'][8][3][4][0] = 0.7
    modules['lgns'][8][3][5][0] = 0.7
    modules['lgns'][8][3][6][0] = 0.7
    modules['lgns'][8][3][7][0] = 0.7
    modules['lgns'][8][3][8][0] = 0.7
    modules['lgns'][8][2][6][0] = 0.7
    modules['lgns'][8][2][7][0] = 0.7
    modules['lgns'][8][1][6][0] = 0.7
    modules['lgns'][8][1][7][0] = 0.7
    modules['lgns'][8][0][6][0] = 0.7
    modules['lgns'][8][0][7][0] = 0.7
    
# What follows is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 2600:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 2900:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.7
    modules['lgns'][8][3][1][0] = 0.7
    modules['lgns'][8][3][2][0] = 0.7
    modules['lgns'][8][3][3][0] = 0.7
    modules['lgns'][8][3][4][0] = 0.7
    modules['lgns'][8][3][5][0] = 0.7
    modules['lgns'][8][3][6][0] = 0.7
    modules['lgns'][8][3][7][0] = 0.7
    modules['lgns'][8][3][8][0] = 0.7
    modules['lgns'][8][2][6][0] = 0.7
    modules['lgns'][8][2][7][0] = 0.7
    modules['lgns'][8][1][6][0] = 0.7
    modules['lgns'][8][1][7][0] = 0.7
    modules['lgns'][8][0][6][0] = 0.7
    modules['lgns'][8][0][7][0] = 0.7

       
# what follows now is an intertrial interval of 400 timesteps (2 second), which includes
# the response period.
if t == 3100:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05

################# CONTROL BLOCK OF 3 TRIALS (MATCH, MISMATCH, MATCH ###########
################# DEGRADED SHAPES ARE PRESENTED AND LOW ATTENTION IS USED ##############
# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 3500:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.05

    # reset D1 prior to each trial
    for x in range(modules['exss'][0]):
    	for y in range(modules['exss'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.54
    modules['lgns'][8][4][4][0] = 0.54
    modules['lgns'][8][4][5][0] = 0.54
    modules['lgns'][8][4][6][0] = 0.54
    modules['lgns'][8][4][7][0] = 0.54
    modules['lgns'][8][4][8][0] = 0.54
    modules['lgns'][8][8][3][0] = 0.54
    modules['lgns'][8][8][4][0] = 0.54
    modules['lgns'][8][8][5][0] = 0.54
    modules['lgns'][8][8][6][0] = 0.54
    modules['lgns'][8][8][7][0] = 0.54
    modules['lgns'][8][8][8][0] = 0.54
    modules['lgns'][8][5][3][0] = 0.54
    modules['lgns'][8][6][3][0] = 0.54
    modules['lgns'][8][7][3][0] = 0.54
    modules['lgns'][8][5][8][0] = 0.54
    modules['lgns'][8][6][8][0] = 0.54
    modules['lgns'][8][7][8][0] = 0.54    

# What follows now is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 3700:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 4000:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.54
    modules['lgns'][8][4][4][0] = 0.54
    modules['lgns'][8][4][5][0] = 0.54
    modules['lgns'][8][4][6][0] = 0.54
    modules['lgns'][8][4][7][0] = 0.54
    modules['lgns'][8][4][8][0] = 0.54
    modules['lgns'][8][8][3][0] = 0.54
    modules['lgns'][8][8][4][0] = 0.54
    modules['lgns'][8][8][5][0] = 0.54
    modules['lgns'][8][8][6][0] = 0.54
    modules['lgns'][8][8][7][0] = 0.54
    modules['lgns'][8][8][8][0] = 0.54
    modules['lgns'][8][5][3][0] = 0.54
    modules['lgns'][8][6][3][0] = 0.54
    modules['lgns'][8][7][3][0] = 0.54
    modules['lgns'][8][5][8][0] = 0.54
    modules['lgns'][8][6][8][0] = 0.54
    modules['lgns'][8][7][8][0] = 0.54

# what follows now is an intertrial interval of 400 timesteps (2 second), which includes
# the response period.
if t == 4200:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05

# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 4600:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.05

    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # reset LGNS activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following stimulus is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.54
    modules['lgns'][8][4][4][0] = 0.54
    modules['lgns'][8][4][5][0] = 0.54
    modules['lgns'][8][4][6][0] = 0.54
    modules['lgns'][8][4][7][0] = 0.54
    modules['lgns'][8][4][8][0] = 0.54
    modules['lgns'][8][8][3][0] = 0.54
    modules['lgns'][8][8][4][0] = 0.54
    modules['lgns'][8][8][5][0] = 0.54
    modules['lgns'][8][8][6][0] = 0.54
    modules['lgns'][8][8][7][0] = 0.54
    modules['lgns'][8][8][8][0] = 0.54
    modules['lgns'][8][5][3][0] = 0.54
    modules['lgns'][8][6][3][0] = 0.54
    modules['lgns'][8][7][3][0] = 0.54
    modules['lgns'][8][5][8][0] = 0.54
    modules['lgns'][8][6][8][0] = 0.54
    modules['lgns'][8][7][8][0] = 0.54
                
# What follows is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 4800:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 5100:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.54
    modules['lgns'][8][3][1][0] = 0.54
    modules['lgns'][8][3][2][0] = 0.54
    modules['lgns'][8][3][3][0] = 0.54
    modules['lgns'][8][3][4][0] = 0.54
    modules['lgns'][8][3][5][0] = 0.54
    modules['lgns'][8][3][6][0] = 0.54
    modules['lgns'][8][3][7][0] = 0.54
    modules['lgns'][8][3][8][0] = 0.54
    modules['lgns'][8][2][6][0] = 0.54
    modules['lgns'][8][2][7][0] = 0.54
    modules['lgns'][8][1][6][0] = 0.54
    modules['lgns'][8][1][7][0] = 0.54
    modules['lgns'][8][0][6][0] = 0.54
    modules['lgns'][8][0][7][0] = 0.54
    
# what follows now is an intertrial interval of 400 timesteps (1 second), which includes
# the response period.
if t == 5300:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05


# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 5700:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.05

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.54
    modules['lgns'][8][3][1][0] = 0.54
    modules['lgns'][8][3][2][0] = 0.54
    modules['lgns'][8][3][3][0] = 0.54
    modules['lgns'][8][3][4][0] = 0.54
    modules['lgns'][8][3][5][0] = 0.54
    modules['lgns'][8][3][6][0] = 0.54
    modules['lgns'][8][3][7][0] = 0.54
    modules['lgns'][8][3][8][0] = 0.54
    modules['lgns'][8][2][6][0] = 0.54
    modules['lgns'][8][2][7][0] = 0.54
    modules['lgns'][8][1][6][0] = 0.54
    modules['lgns'][8][1][7][0] = 0.54
    modules['lgns'][8][0][6][0] = 0.54
    modules['lgns'][8][0][7][0] = 0.54
                    
# What follows not is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 5900:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 6200:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.54
    modules['lgns'][8][3][1][0] = 0.54
    modules['lgns'][8][3][2][0] = 0.54
    modules['lgns'][8][3][3][0] = 0.54
    modules['lgns'][8][3][4][0] = 0.54
    modules['lgns'][8][3][5][0] = 0.54
    modules['lgns'][8][3][6][0] = 0.54
    modules['lgns'][8][3][7][0] = 0.54
    modules['lgns'][8][3][8][0] = 0.54
    modules['lgns'][8][2][6][0] = 0.54
    modules['lgns'][8][2][7][0] = 0.54
    modules['lgns'][8][1][6][0] = 0.54
    modules['lgns'][8][1][7][0] = 0.54
    modules['lgns'][8][0][6][0] = 0.54
    modules['lgns'][8][0][7][0] = 0.54
                     
# what follows now is an intertrial interval of 400 timesteps (2 second), which includes
# the response period.
if t == 6400:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05
