# The following script replicates the results of Horwitz, Warner et al (2005), Figure 4.
#
# There are 3 DMS trials and 3 control trials for each of six levels of attention
#
# The total number of timesteps is 39600 = 198 seconds
#
# The number of timesteps in each trial is 1100 = 5.5 seconds
#
# Both DMS trials and control trials are: MATCH, MISMATCH, MATCH.
# The attention parameter in DMS trials is varied from 0.24 to 0.34 in steps of 0.02
# The control trials constitute 'passive viewing': degraded shapes are presented and
# the same low attention (0.05) is used throughout the control trials
#
# The first 200 timesteps = 1000 ms we do nothing. We assume 1 timestep = 5 ms, as in
# Horwitz et al (2005)
#
# To maintain consistency with Husain et al (2004) and Tagamets and Horwitz (1998),
# we are assuming that each simulation timestep is equivalent to 5 milliseconds
# of real time. 
                
######################################################################################
# FIRST BLOCK OF 3 DMS TRIALS (MATCH, MISMATCH, MATCH)
######################################################################################
# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 200:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.24

    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # reset LGNS activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following stimulus is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.7
    modules['lgns'][8][4][4][0] = 0.7
    modules['lgns'][8][4][5][0] = 0.7
    modules['lgns'][8][4][6][0] = 0.7
    modules['lgns'][8][4][7][0] = 0.7
    modules['lgns'][8][4][8][0] = 0.7
    modules['lgns'][8][8][3][0] = 0.7
    modules['lgns'][8][8][4][0] = 0.7
    modules['lgns'][8][8][5][0] = 0.7
    modules['lgns'][8][8][6][0] = 0.7
    modules['lgns'][8][8][7][0] = 0.7
    modules['lgns'][8][8][8][0] = 0.7
    modules['lgns'][8][5][3][0] = 0.7
    modules['lgns'][8][6][3][0] = 0.7
    modules['lgns'][8][7][3][0] = 0.7
    modules['lgns'][8][5][8][0] = 0.7
    modules['lgns'][8][6][8][0] = 0.7
    modules['lgns'][8][7][8][0] = 0.7
                
# What follows is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 400:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 700:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following stimuuls is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.7
    modules['lgns'][8][4][4][0] = 0.7
    modules['lgns'][8][4][5][0] = 0.7
    modules['lgns'][8][4][6][0] = 0.7
    modules['lgns'][8][4][7][0] = 0.7
    modules['lgns'][8][4][8][0] = 0.7
    modules['lgns'][8][8][3][0] = 0.7
    modules['lgns'][8][8][4][0] = 0.7
    modules['lgns'][8][8][5][0] = 0.7
    modules['lgns'][8][8][6][0] = 0.7
    modules['lgns'][8][8][7][0] = 0.7
    modules['lgns'][8][8][8][0] = 0.7
    modules['lgns'][8][5][3][0] = 0.7
    modules['lgns'][8][6][3][0] = 0.7
    modules['lgns'][8][7][3][0] = 0.7
    modules['lgns'][8][5][8][0] = 0.7
    modules['lgns'][8][6][8][0] = 0.7
    modules['lgns'][8][7][8][0] = 0.7
    
# what follows now is an intertrial interval of 400 timesteps (1 second), which includes
# the response period.
if t == 900:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.25
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05


# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 1300:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.24

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.7
    modules['lgns'][8][4][4][0] = 0.7
    modules['lgns'][8][4][5][0] = 0.7
    modules['lgns'][8][4][6][0] = 0.7
    modules['lgns'][8][4][7][0] = 0.7
    modules['lgns'][8][4][8][0] = 0.7
    modules['lgns'][8][8][3][0] = 0.7
    modules['lgns'][8][8][4][0] = 0.7
    modules['lgns'][8][8][5][0] = 0.7
    modules['lgns'][8][8][6][0] = 0.7
    modules['lgns'][8][8][7][0] = 0.7
    modules['lgns'][8][8][8][0] = 0.7
    modules['lgns'][8][5][3][0] = 0.7
    modules['lgns'][8][6][3][0] = 0.7
    modules['lgns'][8][7][3][0] = 0.7
    modules['lgns'][8][5][8][0] = 0.7
    modules['lgns'][8][6][8][0] = 0.7
    modules['lgns'][8][7][8][0] = 0.7
                    
# What follows not is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 1500:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 1800:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.7
    modules['lgns'][8][3][1][0] = 0.7
    modules['lgns'][8][3][2][0] = 0.7
    modules['lgns'][8][3][3][0] = 0.7
    modules['lgns'][8][3][4][0] = 0.7
    modules['lgns'][8][3][5][0] = 0.7
    modules['lgns'][8][3][6][0] = 0.7
    modules['lgns'][8][3][7][0] = 0.7
    modules['lgns'][8][3][8][0] = 0.7
    modules['lgns'][8][2][6][0] = 0.7
    modules['lgns'][8][2][7][0] = 0.7
    modules['lgns'][8][1][6][0] = 0.7
    modules['lgns'][8][1][7][0] = 0.7
    modules['lgns'][8][0][6][0] = 0.7
    modules['lgns'][8][0][7][0] = 0.7
                     
# what follows now is an intertrial interval of 400 timesteps (2 second), which includes
# the response period.
if t == 2000:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.25
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05

# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 2400:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.24

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.7
    modules['lgns'][8][3][1][0] = 0.7
    modules['lgns'][8][3][2][0] = 0.7
    modules['lgns'][8][3][3][0] = 0.7
    modules['lgns'][8][3][4][0] = 0.7
    modules['lgns'][8][3][5][0] = 0.7
    modules['lgns'][8][3][6][0] = 0.7
    modules['lgns'][8][3][7][0] = 0.7
    modules['lgns'][8][3][8][0] = 0.7
    modules['lgns'][8][2][6][0] = 0.7
    modules['lgns'][8][2][7][0] = 0.7
    modules['lgns'][8][1][6][0] = 0.7
    modules['lgns'][8][1][7][0] = 0.7
    modules['lgns'][8][0][6][0] = 0.7
    modules['lgns'][8][0][7][0] = 0.7
    
# What follows is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 2600:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 2900:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.7
    modules['lgns'][8][3][1][0] = 0.7
    modules['lgns'][8][3][2][0] = 0.7
    modules['lgns'][8][3][3][0] = 0.7
    modules['lgns'][8][3][4][0] = 0.7
    modules['lgns'][8][3][5][0] = 0.7
    modules['lgns'][8][3][6][0] = 0.7
    modules['lgns'][8][3][7][0] = 0.7
    modules['lgns'][8][3][8][0] = 0.7
    modules['lgns'][8][2][6][0] = 0.7
    modules['lgns'][8][2][7][0] = 0.7
    modules['lgns'][8][1][6][0] = 0.7
    modules['lgns'][8][1][7][0] = 0.7
    modules['lgns'][8][0][6][0] = 0.7
    modules['lgns'][8][0][7][0] = 0.7

       
# what follows now is an intertrial interval of 400 timesteps (2 second), which includes
# the response period.
if t == 3100:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05

################# FIRST CONTROL BLOCK OF 3 TRIALS (MATCH, MISMATCH, MATCH ###########
################# DEGRADED SHAPES ARE PRESENTED AND LOW ATTENTION IS USED ##############
# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 3500:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.05

    # reset D1 prior to each trial
    for x in range(modules['exss'][0]):
    	for y in range(modules['exss'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.54
    modules['lgns'][8][4][4][0] = 0.54
    modules['lgns'][8][4][5][0] = 0.54
    modules['lgns'][8][4][6][0] = 0.54
    modules['lgns'][8][4][7][0] = 0.54
    modules['lgns'][8][4][8][0] = 0.54
    modules['lgns'][8][8][3][0] = 0.54
    modules['lgns'][8][8][4][0] = 0.54
    modules['lgns'][8][8][5][0] = 0.54
    modules['lgns'][8][8][6][0] = 0.54
    modules['lgns'][8][8][7][0] = 0.54
    modules['lgns'][8][8][8][0] = 0.54
    modules['lgns'][8][5][3][0] = 0.54
    modules['lgns'][8][6][3][0] = 0.54
    modules['lgns'][8][7][3][0] = 0.54
    modules['lgns'][8][5][8][0] = 0.54
    modules['lgns'][8][6][8][0] = 0.54
    modules['lgns'][8][7][8][0] = 0.54    

# What follows now is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 3700:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 4000:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.54
    modules['lgns'][8][4][4][0] = 0.54
    modules['lgns'][8][4][5][0] = 0.54
    modules['lgns'][8][4][6][0] = 0.54
    modules['lgns'][8][4][7][0] = 0.54
    modules['lgns'][8][4][8][0] = 0.54
    modules['lgns'][8][8][3][0] = 0.54
    modules['lgns'][8][8][4][0] = 0.54
    modules['lgns'][8][8][5][0] = 0.54
    modules['lgns'][8][8][6][0] = 0.54
    modules['lgns'][8][8][7][0] = 0.54
    modules['lgns'][8][8][8][0] = 0.54
    modules['lgns'][8][5][3][0] = 0.54
    modules['lgns'][8][6][3][0] = 0.54
    modules['lgns'][8][7][3][0] = 0.54
    modules['lgns'][8][5][8][0] = 0.54
    modules['lgns'][8][6][8][0] = 0.54
    modules['lgns'][8][7][8][0] = 0.54

# what follows now is an intertrial interval of 400 timesteps (2 second), which includes
# the response period.
if t == 4200:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05

# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 4600:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.05

    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # reset LGNS activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following stimulus is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.54
    modules['lgns'][8][4][4][0] = 0.54
    modules['lgns'][8][4][5][0] = 0.54
    modules['lgns'][8][4][6][0] = 0.54
    modules['lgns'][8][4][7][0] = 0.54
    modules['lgns'][8][4][8][0] = 0.54
    modules['lgns'][8][8][3][0] = 0.54
    modules['lgns'][8][8][4][0] = 0.54
    modules['lgns'][8][8][5][0] = 0.54
    modules['lgns'][8][8][6][0] = 0.54
    modules['lgns'][8][8][7][0] = 0.54
    modules['lgns'][8][8][8][0] = 0.54
    modules['lgns'][8][5][3][0] = 0.54
    modules['lgns'][8][6][3][0] = 0.54
    modules['lgns'][8][7][3][0] = 0.54
    modules['lgns'][8][5][8][0] = 0.54
    modules['lgns'][8][6][8][0] = 0.54
    modules['lgns'][8][7][8][0] = 0.54
                
# What follows is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 4800:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 5100:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.54
    modules['lgns'][8][3][1][0] = 0.54
    modules['lgns'][8][3][2][0] = 0.54
    modules['lgns'][8][3][3][0] = 0.54
    modules['lgns'][8][3][4][0] = 0.54
    modules['lgns'][8][3][5][0] = 0.54
    modules['lgns'][8][3][6][0] = 0.54
    modules['lgns'][8][3][7][0] = 0.54
    modules['lgns'][8][3][8][0] = 0.54
    modules['lgns'][8][2][6][0] = 0.54
    modules['lgns'][8][2][7][0] = 0.54
    modules['lgns'][8][1][6][0] = 0.54
    modules['lgns'][8][1][7][0] = 0.54
    modules['lgns'][8][0][6][0] = 0.54
    modules['lgns'][8][0][7][0] = 0.54
    
# what follows now is an intertrial interval of 400 timesteps (1 second), which includes
# the response period.
if t == 5300:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05


# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 5700:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.05

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.54
    modules['lgns'][8][3][1][0] = 0.54
    modules['lgns'][8][3][2][0] = 0.54
    modules['lgns'][8][3][3][0] = 0.54
    modules['lgns'][8][3][4][0] = 0.54
    modules['lgns'][8][3][5][0] = 0.54
    modules['lgns'][8][3][6][0] = 0.54
    modules['lgns'][8][3][7][0] = 0.54
    modules['lgns'][8][3][8][0] = 0.54
    modules['lgns'][8][2][6][0] = 0.54
    modules['lgns'][8][2][7][0] = 0.54
    modules['lgns'][8][1][6][0] = 0.54
    modules['lgns'][8][1][7][0] = 0.54
    modules['lgns'][8][0][6][0] = 0.54
    modules['lgns'][8][0][7][0] = 0.54
                    
# What follows not is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 5900:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 6200:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.54
    modules['lgns'][8][3][1][0] = 0.54
    modules['lgns'][8][3][2][0] = 0.54
    modules['lgns'][8][3][3][0] = 0.54
    modules['lgns'][8][3][4][0] = 0.54
    modules['lgns'][8][3][5][0] = 0.54
    modules['lgns'][8][3][6][0] = 0.54
    modules['lgns'][8][3][7][0] = 0.54
    modules['lgns'][8][3][8][0] = 0.54
    modules['lgns'][8][2][6][0] = 0.54
    modules['lgns'][8][2][7][0] = 0.54
    modules['lgns'][8][1][6][0] = 0.54
    modules['lgns'][8][1][7][0] = 0.54
    modules['lgns'][8][0][6][0] = 0.54
    modules['lgns'][8][0][7][0] = 0.54
                     
# what follows now is an intertrial interval of 400 timesteps (2 second), which includes
# the response period.
if t == 6400:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05

######################################################################################
# SECOND BLOCK OF 3 DMS TRIALS (MATCH, MISMATCH, MATCH)
######################################################################################
# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 6800:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.26

    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # reset LGNS activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following stimulus is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.7
    modules['lgns'][8][4][4][0] = 0.7
    modules['lgns'][8][4][5][0] = 0.7
    modules['lgns'][8][4][6][0] = 0.7
    modules['lgns'][8][4][7][0] = 0.7
    modules['lgns'][8][4][8][0] = 0.7
    modules['lgns'][8][8][3][0] = 0.7
    modules['lgns'][8][8][4][0] = 0.7
    modules['lgns'][8][8][5][0] = 0.7
    modules['lgns'][8][8][6][0] = 0.7
    modules['lgns'][8][8][7][0] = 0.7
    modules['lgns'][8][8][8][0] = 0.7
    modules['lgns'][8][5][3][0] = 0.7
    modules['lgns'][8][6][3][0] = 0.7
    modules['lgns'][8][7][3][0] = 0.7
    modules['lgns'][8][5][8][0] = 0.7
    modules['lgns'][8][6][8][0] = 0.7
    modules['lgns'][8][7][8][0] = 0.7
                
# What follows is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 7000:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 7300:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following stimuuls is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.7
    modules['lgns'][8][4][4][0] = 0.7
    modules['lgns'][8][4][5][0] = 0.7
    modules['lgns'][8][4][6][0] = 0.7
    modules['lgns'][8][4][7][0] = 0.7
    modules['lgns'][8][4][8][0] = 0.7
    modules['lgns'][8][8][3][0] = 0.7
    modules['lgns'][8][8][4][0] = 0.7
    modules['lgns'][8][8][5][0] = 0.7
    modules['lgns'][8][8][6][0] = 0.7
    modules['lgns'][8][8][7][0] = 0.7
    modules['lgns'][8][8][8][0] = 0.7
    modules['lgns'][8][5][3][0] = 0.7
    modules['lgns'][8][6][3][0] = 0.7
    modules['lgns'][8][7][3][0] = 0.7
    modules['lgns'][8][5][8][0] = 0.7
    modules['lgns'][8][6][8][0] = 0.7
    modules['lgns'][8][7][8][0] = 0.7
    
# what follows now is an intertrial interval of 400 timesteps (1 second), which includes
# the response period.
if t == 7500:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.25
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05


# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 7900:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.26

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.7
    modules['lgns'][8][4][4][0] = 0.7
    modules['lgns'][8][4][5][0] = 0.7
    modules['lgns'][8][4][6][0] = 0.7
    modules['lgns'][8][4][7][0] = 0.7
    modules['lgns'][8][4][8][0] = 0.7
    modules['lgns'][8][8][3][0] = 0.7
    modules['lgns'][8][8][4][0] = 0.7
    modules['lgns'][8][8][5][0] = 0.7
    modules['lgns'][8][8][6][0] = 0.7
    modules['lgns'][8][8][7][0] = 0.7
    modules['lgns'][8][8][8][0] = 0.7
    modules['lgns'][8][5][3][0] = 0.7
    modules['lgns'][8][6][3][0] = 0.7
    modules['lgns'][8][7][3][0] = 0.7
    modules['lgns'][8][5][8][0] = 0.7
    modules['lgns'][8][6][8][0] = 0.7
    modules['lgns'][8][7][8][0] = 0.7
                    
# What follows not is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 8100:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 8400:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.7
    modules['lgns'][8][3][1][0] = 0.7
    modules['lgns'][8][3][2][0] = 0.7
    modules['lgns'][8][3][3][0] = 0.7
    modules['lgns'][8][3][4][0] = 0.7
    modules['lgns'][8][3][5][0] = 0.7
    modules['lgns'][8][3][6][0] = 0.7
    modules['lgns'][8][3][7][0] = 0.7
    modules['lgns'][8][3][8][0] = 0.7
    modules['lgns'][8][2][6][0] = 0.7
    modules['lgns'][8][2][7][0] = 0.7
    modules['lgns'][8][1][6][0] = 0.7
    modules['lgns'][8][1][7][0] = 0.7
    modules['lgns'][8][0][6][0] = 0.7
    modules['lgns'][8][0][7][0] = 0.7
                     
# what follows now is an intertrial interval of 400 timesteps (2 second), which includes
# the response period.
if t == 8600:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.25
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05

# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 9000:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.26

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.7
    modules['lgns'][8][3][1][0] = 0.7
    modules['lgns'][8][3][2][0] = 0.7
    modules['lgns'][8][3][3][0] = 0.7
    modules['lgns'][8][3][4][0] = 0.7
    modules['lgns'][8][3][5][0] = 0.7
    modules['lgns'][8][3][6][0] = 0.7
    modules['lgns'][8][3][7][0] = 0.7
    modules['lgns'][8][3][8][0] = 0.7
    modules['lgns'][8][2][6][0] = 0.7
    modules['lgns'][8][2][7][0] = 0.7
    modules['lgns'][8][1][6][0] = 0.7
    modules['lgns'][8][1][7][0] = 0.7
    modules['lgns'][8][0][6][0] = 0.7
    modules['lgns'][8][0][7][0] = 0.7
    
# What follows is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 9200:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 9500:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.7
    modules['lgns'][8][3][1][0] = 0.7
    modules['lgns'][8][3][2][0] = 0.7
    modules['lgns'][8][3][3][0] = 0.7
    modules['lgns'][8][3][4][0] = 0.7
    modules['lgns'][8][3][5][0] = 0.7
    modules['lgns'][8][3][6][0] = 0.7
    modules['lgns'][8][3][7][0] = 0.7
    modules['lgns'][8][3][8][0] = 0.7
    modules['lgns'][8][2][6][0] = 0.7
    modules['lgns'][8][2][7][0] = 0.7
    modules['lgns'][8][1][6][0] = 0.7
    modules['lgns'][8][1][7][0] = 0.7
    modules['lgns'][8][0][6][0] = 0.7
    modules['lgns'][8][0][7][0] = 0.7

       
# what follows now is an intertrial interval of 400 timesteps (2 second), which includes
# the response period.
if t == 9700:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05

################# SECOND CONTROL BLOCK OF 3 TRIALS (MATCH, MISMATCH, MATCH ###########
################# DEGRADED SHAPES ARE PRESENTED AND LOW ATTENTION IS USED ##############
# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 10100:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.05

    # reset D1 prior to each trial
    for x in range(modules['exss'][0]):
    	for y in range(modules['exss'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.54
    modules['lgns'][8][4][4][0] = 0.54
    modules['lgns'][8][4][5][0] = 0.54
    modules['lgns'][8][4][6][0] = 0.54
    modules['lgns'][8][4][7][0] = 0.54
    modules['lgns'][8][4][8][0] = 0.54
    modules['lgns'][8][8][3][0] = 0.54
    modules['lgns'][8][8][4][0] = 0.54
    modules['lgns'][8][8][5][0] = 0.54
    modules['lgns'][8][8][6][0] = 0.54
    modules['lgns'][8][8][7][0] = 0.54
    modules['lgns'][8][8][8][0] = 0.54
    modules['lgns'][8][5][3][0] = 0.54
    modules['lgns'][8][6][3][0] = 0.54
    modules['lgns'][8][7][3][0] = 0.54
    modules['lgns'][8][5][8][0] = 0.54
    modules['lgns'][8][6][8][0] = 0.54
    modules['lgns'][8][7][8][0] = 0.54    

# What follows now is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 10300:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 10600:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.54
    modules['lgns'][8][4][4][0] = 0.54
    modules['lgns'][8][4][5][0] = 0.54
    modules['lgns'][8][4][6][0] = 0.54
    modules['lgns'][8][4][7][0] = 0.54
    modules['lgns'][8][4][8][0] = 0.54
    modules['lgns'][8][8][3][0] = 0.54
    modules['lgns'][8][8][4][0] = 0.54
    modules['lgns'][8][8][5][0] = 0.54
    modules['lgns'][8][8][6][0] = 0.54
    modules['lgns'][8][8][7][0] = 0.54
    modules['lgns'][8][8][8][0] = 0.54
    modules['lgns'][8][5][3][0] = 0.54
    modules['lgns'][8][6][3][0] = 0.54
    modules['lgns'][8][7][3][0] = 0.54
    modules['lgns'][8][5][8][0] = 0.54
    modules['lgns'][8][6][8][0] = 0.54
    modules['lgns'][8][7][8][0] = 0.54

# what follows now is an intertrial interval of 400 timesteps (2 second), which includes
# the response period.
if t == 10800:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05

# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 11200:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.05

    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # reset LGNS activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following stimulus is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.54
    modules['lgns'][8][4][4][0] = 0.54
    modules['lgns'][8][4][5][0] = 0.54
    modules['lgns'][8][4][6][0] = 0.54
    modules['lgns'][8][4][7][0] = 0.54
    modules['lgns'][8][4][8][0] = 0.54
    modules['lgns'][8][8][3][0] = 0.54
    modules['lgns'][8][8][4][0] = 0.54
    modules['lgns'][8][8][5][0] = 0.54
    modules['lgns'][8][8][6][0] = 0.54
    modules['lgns'][8][8][7][0] = 0.54
    modules['lgns'][8][8][8][0] = 0.54
    modules['lgns'][8][5][3][0] = 0.54
    modules['lgns'][8][6][3][0] = 0.54
    modules['lgns'][8][7][3][0] = 0.54
    modules['lgns'][8][5][8][0] = 0.54
    modules['lgns'][8][6][8][0] = 0.54
    modules['lgns'][8][7][8][0] = 0.54
                
# What follows is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 11400:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 11700:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.54
    modules['lgns'][8][3][1][0] = 0.54
    modules['lgns'][8][3][2][0] = 0.54
    modules['lgns'][8][3][3][0] = 0.54
    modules['lgns'][8][3][4][0] = 0.54
    modules['lgns'][8][3][5][0] = 0.54
    modules['lgns'][8][3][6][0] = 0.54
    modules['lgns'][8][3][7][0] = 0.54
    modules['lgns'][8][3][8][0] = 0.54
    modules['lgns'][8][2][6][0] = 0.54
    modules['lgns'][8][2][7][0] = 0.54
    modules['lgns'][8][1][6][0] = 0.54
    modules['lgns'][8][1][7][0] = 0.54
    modules['lgns'][8][0][6][0] = 0.54
    modules['lgns'][8][0][7][0] = 0.54
    
# what follows now is an intertrial interval of 400 timesteps (1 second), which includes
# the response period.
if t == 11900:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05


# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 12300:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.05

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.54
    modules['lgns'][8][3][1][0] = 0.54
    modules['lgns'][8][3][2][0] = 0.54
    modules['lgns'][8][3][3][0] = 0.54
    modules['lgns'][8][3][4][0] = 0.54
    modules['lgns'][8][3][5][0] = 0.54
    modules['lgns'][8][3][6][0] = 0.54
    modules['lgns'][8][3][7][0] = 0.54
    modules['lgns'][8][3][8][0] = 0.54
    modules['lgns'][8][2][6][0] = 0.54
    modules['lgns'][8][2][7][0] = 0.54
    modules['lgns'][8][1][6][0] = 0.54
    modules['lgns'][8][1][7][0] = 0.54
    modules['lgns'][8][0][6][0] = 0.54
    modules['lgns'][8][0][7][0] = 0.54
                    
# What follows not is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 12500:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 12800:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.54
    modules['lgns'][8][3][1][0] = 0.54
    modules['lgns'][8][3][2][0] = 0.54
    modules['lgns'][8][3][3][0] = 0.54
    modules['lgns'][8][3][4][0] = 0.54
    modules['lgns'][8][3][5][0] = 0.54
    modules['lgns'][8][3][6][0] = 0.54
    modules['lgns'][8][3][7][0] = 0.54
    modules['lgns'][8][3][8][0] = 0.54
    modules['lgns'][8][2][6][0] = 0.54
    modules['lgns'][8][2][7][0] = 0.54
    modules['lgns'][8][1][6][0] = 0.54
    modules['lgns'][8][1][7][0] = 0.54
    modules['lgns'][8][0][6][0] = 0.54
    modules['lgns'][8][0][7][0] = 0.54
                     
# what follows now is an intertrial interval of 400 timesteps (2 second), which includes
# the response period.
if t == 13000:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05

######################################################################################
# THIRD BLOCK OF 3 DMS TRIALS (MATCH, MISMATCH, MATCH)
######################################################################################
# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 13400:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.28

    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # reset LGNS activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following stimulus is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.7
    modules['lgns'][8][4][4][0] = 0.7
    modules['lgns'][8][4][5][0] = 0.7
    modules['lgns'][8][4][6][0] = 0.7
    modules['lgns'][8][4][7][0] = 0.7
    modules['lgns'][8][4][8][0] = 0.7
    modules['lgns'][8][8][3][0] = 0.7
    modules['lgns'][8][8][4][0] = 0.7
    modules['lgns'][8][8][5][0] = 0.7
    modules['lgns'][8][8][6][0] = 0.7
    modules['lgns'][8][8][7][0] = 0.7
    modules['lgns'][8][8][8][0] = 0.7
    modules['lgns'][8][5][3][0] = 0.7
    modules['lgns'][8][6][3][0] = 0.7
    modules['lgns'][8][7][3][0] = 0.7
    modules['lgns'][8][5][8][0] = 0.7
    modules['lgns'][8][6][8][0] = 0.7
    modules['lgns'][8][7][8][0] = 0.7
                
# What follows is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 13600:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 13900:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following stimuuls is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.7
    modules['lgns'][8][4][4][0] = 0.7
    modules['lgns'][8][4][5][0] = 0.7
    modules['lgns'][8][4][6][0] = 0.7
    modules['lgns'][8][4][7][0] = 0.7
    modules['lgns'][8][4][8][0] = 0.7
    modules['lgns'][8][8][3][0] = 0.7
    modules['lgns'][8][8][4][0] = 0.7
    modules['lgns'][8][8][5][0] = 0.7
    modules['lgns'][8][8][6][0] = 0.7
    modules['lgns'][8][8][7][0] = 0.7
    modules['lgns'][8][8][8][0] = 0.7
    modules['lgns'][8][5][3][0] = 0.7
    modules['lgns'][8][6][3][0] = 0.7
    modules['lgns'][8][7][3][0] = 0.7
    modules['lgns'][8][5][8][0] = 0.7
    modules['lgns'][8][6][8][0] = 0.7
    modules['lgns'][8][7][8][0] = 0.7
    
# what follows now is an intertrial interval of 400 timesteps (1 second), which includes
# the response period.
if t == 14100:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.25
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05


# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 14500:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.28

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.7
    modules['lgns'][8][4][4][0] = 0.7
    modules['lgns'][8][4][5][0] = 0.7
    modules['lgns'][8][4][6][0] = 0.7
    modules['lgns'][8][4][7][0] = 0.7
    modules['lgns'][8][4][8][0] = 0.7
    modules['lgns'][8][8][3][0] = 0.7
    modules['lgns'][8][8][4][0] = 0.7
    modules['lgns'][8][8][5][0] = 0.7
    modules['lgns'][8][8][6][0] = 0.7
    modules['lgns'][8][8][7][0] = 0.7
    modules['lgns'][8][8][8][0] = 0.7
    modules['lgns'][8][5][3][0] = 0.7
    modules['lgns'][8][6][3][0] = 0.7
    modules['lgns'][8][7][3][0] = 0.7
    modules['lgns'][8][5][8][0] = 0.7
    modules['lgns'][8][6][8][0] = 0.7
    modules['lgns'][8][7][8][0] = 0.7
                    
# What follows not is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 14700:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 15000:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.7
    modules['lgns'][8][3][1][0] = 0.7
    modules['lgns'][8][3][2][0] = 0.7
    modules['lgns'][8][3][3][0] = 0.7
    modules['lgns'][8][3][4][0] = 0.7
    modules['lgns'][8][3][5][0] = 0.7
    modules['lgns'][8][3][6][0] = 0.7
    modules['lgns'][8][3][7][0] = 0.7
    modules['lgns'][8][3][8][0] = 0.7
    modules['lgns'][8][2][6][0] = 0.7
    modules['lgns'][8][2][7][0] = 0.7
    modules['lgns'][8][1][6][0] = 0.7
    modules['lgns'][8][1][7][0] = 0.7
    modules['lgns'][8][0][6][0] = 0.7
    modules['lgns'][8][0][7][0] = 0.7
                     
# what follows now is an intertrial interval of 400 timesteps (2 second), which includes
# the response period.
if t == 15200:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.25
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05

# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 15600:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.28

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.7
    modules['lgns'][8][3][1][0] = 0.7
    modules['lgns'][8][3][2][0] = 0.7
    modules['lgns'][8][3][3][0] = 0.7
    modules['lgns'][8][3][4][0] = 0.7
    modules['lgns'][8][3][5][0] = 0.7
    modules['lgns'][8][3][6][0] = 0.7
    modules['lgns'][8][3][7][0] = 0.7
    modules['lgns'][8][3][8][0] = 0.7
    modules['lgns'][8][2][6][0] = 0.7
    modules['lgns'][8][2][7][0] = 0.7
    modules['lgns'][8][1][6][0] = 0.7
    modules['lgns'][8][1][7][0] = 0.7
    modules['lgns'][8][0][6][0] = 0.7
    modules['lgns'][8][0][7][0] = 0.7
    
# What follows is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 15800:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 16100:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.7
    modules['lgns'][8][3][1][0] = 0.7
    modules['lgns'][8][3][2][0] = 0.7
    modules['lgns'][8][3][3][0] = 0.7
    modules['lgns'][8][3][4][0] = 0.7
    modules['lgns'][8][3][5][0] = 0.7
    modules['lgns'][8][3][6][0] = 0.7
    modules['lgns'][8][3][7][0] = 0.7
    modules['lgns'][8][3][8][0] = 0.7
    modules['lgns'][8][2][6][0] = 0.7
    modules['lgns'][8][2][7][0] = 0.7
    modules['lgns'][8][1][6][0] = 0.7
    modules['lgns'][8][1][7][0] = 0.7
    modules['lgns'][8][0][6][0] = 0.7
    modules['lgns'][8][0][7][0] = 0.7

       
# what follows now is an intertrial interval of 400 timesteps (2 second), which includes
# the response period.
if t == 16300:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05

################# THIRD CONTROL BLOCK OF 3 TRIALS (MATCH, MISMATCH, MATCH ###########
################# DEGRADED SHAPES ARE PRESENTED AND LOW ATTENTION IS USED ##############
# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 16700:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.05

    # reset D1 prior to each trial
    for x in range(modules['exss'][0]):
    	for y in range(modules['exss'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.54
    modules['lgns'][8][4][4][0] = 0.54
    modules['lgns'][8][4][5][0] = 0.54
    modules['lgns'][8][4][6][0] = 0.54
    modules['lgns'][8][4][7][0] = 0.54
    modules['lgns'][8][4][8][0] = 0.54
    modules['lgns'][8][8][3][0] = 0.54
    modules['lgns'][8][8][4][0] = 0.54
    modules['lgns'][8][8][5][0] = 0.54
    modules['lgns'][8][8][6][0] = 0.54
    modules['lgns'][8][8][7][0] = 0.54
    modules['lgns'][8][8][8][0] = 0.54
    modules['lgns'][8][5][3][0] = 0.54
    modules['lgns'][8][6][3][0] = 0.54
    modules['lgns'][8][7][3][0] = 0.54
    modules['lgns'][8][5][8][0] = 0.54
    modules['lgns'][8][6][8][0] = 0.54
    modules['lgns'][8][7][8][0] = 0.54    

# What follows now is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 16900:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 17200:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.54
    modules['lgns'][8][4][4][0] = 0.54
    modules['lgns'][8][4][5][0] = 0.54
    modules['lgns'][8][4][6][0] = 0.54
    modules['lgns'][8][4][7][0] = 0.54
    modules['lgns'][8][4][8][0] = 0.54
    modules['lgns'][8][8][3][0] = 0.54
    modules['lgns'][8][8][4][0] = 0.54
    modules['lgns'][8][8][5][0] = 0.54
    modules['lgns'][8][8][6][0] = 0.54
    modules['lgns'][8][8][7][0] = 0.54
    modules['lgns'][8][8][8][0] = 0.54
    modules['lgns'][8][5][3][0] = 0.54
    modules['lgns'][8][6][3][0] = 0.54
    modules['lgns'][8][7][3][0] = 0.54
    modules['lgns'][8][5][8][0] = 0.54
    modules['lgns'][8][6][8][0] = 0.54
    modules['lgns'][8][7][8][0] = 0.54

# what follows now is an intertrial interval of 400 timesteps (2 second), which includes
# the response period.
if t == 17400:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05

# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 17800:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.05

    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # reset LGNS activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following stimulus is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.54
    modules['lgns'][8][4][4][0] = 0.54
    modules['lgns'][8][4][5][0] = 0.54
    modules['lgns'][8][4][6][0] = 0.54
    modules['lgns'][8][4][7][0] = 0.54
    modules['lgns'][8][4][8][0] = 0.54
    modules['lgns'][8][8][3][0] = 0.54
    modules['lgns'][8][8][4][0] = 0.54
    modules['lgns'][8][8][5][0] = 0.54
    modules['lgns'][8][8][6][0] = 0.54
    modules['lgns'][8][8][7][0] = 0.54
    modules['lgns'][8][8][8][0] = 0.54
    modules['lgns'][8][5][3][0] = 0.54
    modules['lgns'][8][6][3][0] = 0.54
    modules['lgns'][8][7][3][0] = 0.54
    modules['lgns'][8][5][8][0] = 0.54
    modules['lgns'][8][6][8][0] = 0.54
    modules['lgns'][8][7][8][0] = 0.54
                
# What follows is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 18000:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 18300:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.54
    modules['lgns'][8][3][1][0] = 0.54
    modules['lgns'][8][3][2][0] = 0.54
    modules['lgns'][8][3][3][0] = 0.54
    modules['lgns'][8][3][4][0] = 0.54
    modules['lgns'][8][3][5][0] = 0.54
    modules['lgns'][8][3][6][0] = 0.54
    modules['lgns'][8][3][7][0] = 0.54
    modules['lgns'][8][3][8][0] = 0.54
    modules['lgns'][8][2][6][0] = 0.54
    modules['lgns'][8][2][7][0] = 0.54
    modules['lgns'][8][1][6][0] = 0.54
    modules['lgns'][8][1][7][0] = 0.54
    modules['lgns'][8][0][6][0] = 0.54
    modules['lgns'][8][0][7][0] = 0.54
    
# what follows now is an intertrial interval of 400 timesteps (1 second), which includes
# the response period.
if t == 18500:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05


# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 18900:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.05

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.54
    modules['lgns'][8][3][1][0] = 0.54
    modules['lgns'][8][3][2][0] = 0.54
    modules['lgns'][8][3][3][0] = 0.54
    modules['lgns'][8][3][4][0] = 0.54
    modules['lgns'][8][3][5][0] = 0.54
    modules['lgns'][8][3][6][0] = 0.54
    modules['lgns'][8][3][7][0] = 0.54
    modules['lgns'][8][3][8][0] = 0.54
    modules['lgns'][8][2][6][0] = 0.54
    modules['lgns'][8][2][7][0] = 0.54
    modules['lgns'][8][1][6][0] = 0.54
    modules['lgns'][8][1][7][0] = 0.54
    modules['lgns'][8][0][6][0] = 0.54
    modules['lgns'][8][0][7][0] = 0.54
                    
# What follows not is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 19100:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 19400:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.54
    modules['lgns'][8][3][1][0] = 0.54
    modules['lgns'][8][3][2][0] = 0.54
    modules['lgns'][8][3][3][0] = 0.54
    modules['lgns'][8][3][4][0] = 0.54
    modules['lgns'][8][3][5][0] = 0.54
    modules['lgns'][8][3][6][0] = 0.54
    modules['lgns'][8][3][7][0] = 0.54
    modules['lgns'][8][3][8][0] = 0.54
    modules['lgns'][8][2][6][0] = 0.54
    modules['lgns'][8][2][7][0] = 0.54
    modules['lgns'][8][1][6][0] = 0.54
    modules['lgns'][8][1][7][0] = 0.54
    modules['lgns'][8][0][6][0] = 0.54
    modules['lgns'][8][0][7][0] = 0.54
                     
# what follows now is an intertrial interval of 400 timesteps (2 second), which includes
# the response period.
if t == 19600:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05

######################################################################################
# FOURTH BLOCK OF 3 DMS TRIALS (MATCH, MISMATCH, MATCH)
######################################################################################
# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 20000:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.3

    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # reset LGNS activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following stimulus is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.7
    modules['lgns'][8][4][4][0] = 0.7
    modules['lgns'][8][4][5][0] = 0.7
    modules['lgns'][8][4][6][0] = 0.7
    modules['lgns'][8][4][7][0] = 0.7
    modules['lgns'][8][4][8][0] = 0.7
    modules['lgns'][8][8][3][0] = 0.7
    modules['lgns'][8][8][4][0] = 0.7
    modules['lgns'][8][8][5][0] = 0.7
    modules['lgns'][8][8][6][0] = 0.7
    modules['lgns'][8][8][7][0] = 0.7
    modules['lgns'][8][8][8][0] = 0.7
    modules['lgns'][8][5][3][0] = 0.7
    modules['lgns'][8][6][3][0] = 0.7
    modules['lgns'][8][7][3][0] = 0.7
    modules['lgns'][8][5][8][0] = 0.7
    modules['lgns'][8][6][8][0] = 0.7
    modules['lgns'][8][7][8][0] = 0.7
                
# What follows is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 20200:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 20500:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following stimuuls is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.7
    modules['lgns'][8][4][4][0] = 0.7
    modules['lgns'][8][4][5][0] = 0.7
    modules['lgns'][8][4][6][0] = 0.7
    modules['lgns'][8][4][7][0] = 0.7
    modules['lgns'][8][4][8][0] = 0.7
    modules['lgns'][8][8][3][0] = 0.7
    modules['lgns'][8][8][4][0] = 0.7
    modules['lgns'][8][8][5][0] = 0.7
    modules['lgns'][8][8][6][0] = 0.7
    modules['lgns'][8][8][7][0] = 0.7
    modules['lgns'][8][8][8][0] = 0.7
    modules['lgns'][8][5][3][0] = 0.7
    modules['lgns'][8][6][3][0] = 0.7
    modules['lgns'][8][7][3][0] = 0.7
    modules['lgns'][8][5][8][0] = 0.7
    modules['lgns'][8][6][8][0] = 0.7
    modules['lgns'][8][7][8][0] = 0.7
    
# what follows now is an intertrial interval of 400 timesteps (1 second), which includes
# the response period.
if t == 20700:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.25
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05


# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 21100:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.3

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.7
    modules['lgns'][8][4][4][0] = 0.7
    modules['lgns'][8][4][5][0] = 0.7
    modules['lgns'][8][4][6][0] = 0.7
    modules['lgns'][8][4][7][0] = 0.7
    modules['lgns'][8][4][8][0] = 0.7
    modules['lgns'][8][8][3][0] = 0.7
    modules['lgns'][8][8][4][0] = 0.7
    modules['lgns'][8][8][5][0] = 0.7
    modules['lgns'][8][8][6][0] = 0.7
    modules['lgns'][8][8][7][0] = 0.7
    modules['lgns'][8][8][8][0] = 0.7
    modules['lgns'][8][5][3][0] = 0.7
    modules['lgns'][8][6][3][0] = 0.7
    modules['lgns'][8][7][3][0] = 0.7
    modules['lgns'][8][5][8][0] = 0.7
    modules['lgns'][8][6][8][0] = 0.7
    modules['lgns'][8][7][8][0] = 0.7
                    
# What follows not is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 21300:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 21600:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.7
    modules['lgns'][8][3][1][0] = 0.7
    modules['lgns'][8][3][2][0] = 0.7
    modules['lgns'][8][3][3][0] = 0.7
    modules['lgns'][8][3][4][0] = 0.7
    modules['lgns'][8][3][5][0] = 0.7
    modules['lgns'][8][3][6][0] = 0.7
    modules['lgns'][8][3][7][0] = 0.7
    modules['lgns'][8][3][8][0] = 0.7
    modules['lgns'][8][2][6][0] = 0.7
    modules['lgns'][8][2][7][0] = 0.7
    modules['lgns'][8][1][6][0] = 0.7
    modules['lgns'][8][1][7][0] = 0.7
    modules['lgns'][8][0][6][0] = 0.7
    modules['lgns'][8][0][7][0] = 0.7
                     
# what follows now is an intertrial interval of 400 timesteps (2 second), which includes
# the response period.
if t == 21800:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.25
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05

# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 22200:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.3

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.7
    modules['lgns'][8][3][1][0] = 0.7
    modules['lgns'][8][3][2][0] = 0.7
    modules['lgns'][8][3][3][0] = 0.7
    modules['lgns'][8][3][4][0] = 0.7
    modules['lgns'][8][3][5][0] = 0.7
    modules['lgns'][8][3][6][0] = 0.7
    modules['lgns'][8][3][7][0] = 0.7
    modules['lgns'][8][3][8][0] = 0.7
    modules['lgns'][8][2][6][0] = 0.7
    modules['lgns'][8][2][7][0] = 0.7
    modules['lgns'][8][1][6][0] = 0.7
    modules['lgns'][8][1][7][0] = 0.7
    modules['lgns'][8][0][6][0] = 0.7
    modules['lgns'][8][0][7][0] = 0.7
    
# What follows is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 22400:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 22700:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.7
    modules['lgns'][8][3][1][0] = 0.7
    modules['lgns'][8][3][2][0] = 0.7
    modules['lgns'][8][3][3][0] = 0.7
    modules['lgns'][8][3][4][0] = 0.7
    modules['lgns'][8][3][5][0] = 0.7
    modules['lgns'][8][3][6][0] = 0.7
    modules['lgns'][8][3][7][0] = 0.7
    modules['lgns'][8][3][8][0] = 0.7
    modules['lgns'][8][2][6][0] = 0.7
    modules['lgns'][8][2][7][0] = 0.7
    modules['lgns'][8][1][6][0] = 0.7
    modules['lgns'][8][1][7][0] = 0.7
    modules['lgns'][8][0][6][0] = 0.7
    modules['lgns'][8][0][7][0] = 0.7

       
# what follows now is an intertrial interval of 400 timesteps (2 second), which includes
# the response period.
if t == 22900:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05

################# FOURTH CONTROL BLOCK OF 3 TRIALS (MATCH, MISMATCH, MATCH ###########
################# DEGRADED SHAPES ARE PRESENTED AND LOW ATTENTION IS USED ##############
# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 23300:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.05

    # reset D1 prior to each trial
    for x in range(modules['exss'][0]):
    	for y in range(modules['exss'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.54
    modules['lgns'][8][4][4][0] = 0.54
    modules['lgns'][8][4][5][0] = 0.54
    modules['lgns'][8][4][6][0] = 0.54
    modules['lgns'][8][4][7][0] = 0.54
    modules['lgns'][8][4][8][0] = 0.54
    modules['lgns'][8][8][3][0] = 0.54
    modules['lgns'][8][8][4][0] = 0.54
    modules['lgns'][8][8][5][0] = 0.54
    modules['lgns'][8][8][6][0] = 0.54
    modules['lgns'][8][8][7][0] = 0.54
    modules['lgns'][8][8][8][0] = 0.54
    modules['lgns'][8][5][3][0] = 0.54
    modules['lgns'][8][6][3][0] = 0.54
    modules['lgns'][8][7][3][0] = 0.54
    modules['lgns'][8][5][8][0] = 0.54
    modules['lgns'][8][6][8][0] = 0.54
    modules['lgns'][8][7][8][0] = 0.54    

# What follows now is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 23500:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 23800:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.54
    modules['lgns'][8][4][4][0] = 0.54
    modules['lgns'][8][4][5][0] = 0.54
    modules['lgns'][8][4][6][0] = 0.54
    modules['lgns'][8][4][7][0] = 0.54
    modules['lgns'][8][4][8][0] = 0.54
    modules['lgns'][8][8][3][0] = 0.54
    modules['lgns'][8][8][4][0] = 0.54
    modules['lgns'][8][8][5][0] = 0.54
    modules['lgns'][8][8][6][0] = 0.54
    modules['lgns'][8][8][7][0] = 0.54
    modules['lgns'][8][8][8][0] = 0.54
    modules['lgns'][8][5][3][0] = 0.54
    modules['lgns'][8][6][3][0] = 0.54
    modules['lgns'][8][7][3][0] = 0.54
    modules['lgns'][8][5][8][0] = 0.54
    modules['lgns'][8][6][8][0] = 0.54
    modules['lgns'][8][7][8][0] = 0.54

# what follows now is an intertrial interval of 400 timesteps (2 second), which includes
# the response period.
if t == 24000:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05

# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 24400:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.05

    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # reset LGNS activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following stimulus is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.54
    modules['lgns'][8][4][4][0] = 0.54
    modules['lgns'][8][4][5][0] = 0.54
    modules['lgns'][8][4][6][0] = 0.54
    modules['lgns'][8][4][7][0] = 0.54
    modules['lgns'][8][4][8][0] = 0.54
    modules['lgns'][8][8][3][0] = 0.54
    modules['lgns'][8][8][4][0] = 0.54
    modules['lgns'][8][8][5][0] = 0.54
    modules['lgns'][8][8][6][0] = 0.54
    modules['lgns'][8][8][7][0] = 0.54
    modules['lgns'][8][8][8][0] = 0.54
    modules['lgns'][8][5][3][0] = 0.54
    modules['lgns'][8][6][3][0] = 0.54
    modules['lgns'][8][7][3][0] = 0.54
    modules['lgns'][8][5][8][0] = 0.54
    modules['lgns'][8][6][8][0] = 0.54
    modules['lgns'][8][7][8][0] = 0.54
                
# What follows is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 24600:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 24900:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.54
    modules['lgns'][8][3][1][0] = 0.54
    modules['lgns'][8][3][2][0] = 0.54
    modules['lgns'][8][3][3][0] = 0.54
    modules['lgns'][8][3][4][0] = 0.54
    modules['lgns'][8][3][5][0] = 0.54
    modules['lgns'][8][3][6][0] = 0.54
    modules['lgns'][8][3][7][0] = 0.54
    modules['lgns'][8][3][8][0] = 0.54
    modules['lgns'][8][2][6][0] = 0.54
    modules['lgns'][8][2][7][0] = 0.54
    modules['lgns'][8][1][6][0] = 0.54
    modules['lgns'][8][1][7][0] = 0.54
    modules['lgns'][8][0][6][0] = 0.54
    modules['lgns'][8][0][7][0] = 0.54
    
# what follows now is an intertrial interval of 400 timesteps (1 second), which includes
# the response period.
if t == 25100:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05


# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 25500:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.05

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.54
    modules['lgns'][8][3][1][0] = 0.54
    modules['lgns'][8][3][2][0] = 0.54
    modules['lgns'][8][3][3][0] = 0.54
    modules['lgns'][8][3][4][0] = 0.54
    modules['lgns'][8][3][5][0] = 0.54
    modules['lgns'][8][3][6][0] = 0.54
    modules['lgns'][8][3][7][0] = 0.54
    modules['lgns'][8][3][8][0] = 0.54
    modules['lgns'][8][2][6][0] = 0.54
    modules['lgns'][8][2][7][0] = 0.54
    modules['lgns'][8][1][6][0] = 0.54
    modules['lgns'][8][1][7][0] = 0.54
    modules['lgns'][8][0][6][0] = 0.54
    modules['lgns'][8][0][7][0] = 0.54
                    
# What follows not is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 25700:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 26000:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.54
    modules['lgns'][8][3][1][0] = 0.54
    modules['lgns'][8][3][2][0] = 0.54
    modules['lgns'][8][3][3][0] = 0.54
    modules['lgns'][8][3][4][0] = 0.54
    modules['lgns'][8][3][5][0] = 0.54
    modules['lgns'][8][3][6][0] = 0.54
    modules['lgns'][8][3][7][0] = 0.54
    modules['lgns'][8][3][8][0] = 0.54
    modules['lgns'][8][2][6][0] = 0.54
    modules['lgns'][8][2][7][0] = 0.54
    modules['lgns'][8][1][6][0] = 0.54
    modules['lgns'][8][1][7][0] = 0.54
    modules['lgns'][8][0][6][0] = 0.54
    modules['lgns'][8][0][7][0] = 0.54
                     
# what follows now is an intertrial interval of 400 timesteps (2 second), which includes
# the response period.
if t == 26200:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05

######################################################################################
# FIFTH BLOCK OF 3 DMS TRIALS (MATCH, MISMATCH, MATCH)
######################################################################################
# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 26600:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.32

    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # reset LGNS activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following stimulus is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.7
    modules['lgns'][8][4][4][0] = 0.7
    modules['lgns'][8][4][5][0] = 0.7
    modules['lgns'][8][4][6][0] = 0.7
    modules['lgns'][8][4][7][0] = 0.7
    modules['lgns'][8][4][8][0] = 0.7
    modules['lgns'][8][8][3][0] = 0.7
    modules['lgns'][8][8][4][0] = 0.7
    modules['lgns'][8][8][5][0] = 0.7
    modules['lgns'][8][8][6][0] = 0.7
    modules['lgns'][8][8][7][0] = 0.7
    modules['lgns'][8][8][8][0] = 0.7
    modules['lgns'][8][5][3][0] = 0.7
    modules['lgns'][8][6][3][0] = 0.7
    modules['lgns'][8][7][3][0] = 0.7
    modules['lgns'][8][5][8][0] = 0.7
    modules['lgns'][8][6][8][0] = 0.7
    modules['lgns'][8][7][8][0] = 0.7
                
# What follows is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 26800:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 27100:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following stimuuls is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.7
    modules['lgns'][8][4][4][0] = 0.7
    modules['lgns'][8][4][5][0] = 0.7
    modules['lgns'][8][4][6][0] = 0.7
    modules['lgns'][8][4][7][0] = 0.7
    modules['lgns'][8][4][8][0] = 0.7
    modules['lgns'][8][8][3][0] = 0.7
    modules['lgns'][8][8][4][0] = 0.7
    modules['lgns'][8][8][5][0] = 0.7
    modules['lgns'][8][8][6][0] = 0.7
    modules['lgns'][8][8][7][0] = 0.7
    modules['lgns'][8][8][8][0] = 0.7
    modules['lgns'][8][5][3][0] = 0.7
    modules['lgns'][8][6][3][0] = 0.7
    modules['lgns'][8][7][3][0] = 0.7
    modules['lgns'][8][5][8][0] = 0.7
    modules['lgns'][8][6][8][0] = 0.7
    modules['lgns'][8][7][8][0] = 0.7
    
# what follows now is an intertrial interval of 400 timesteps (1 second), which includes
# the response period.
if t == 27300:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.25
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05


# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 27700:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.32

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.7
    modules['lgns'][8][4][4][0] = 0.7
    modules['lgns'][8][4][5][0] = 0.7
    modules['lgns'][8][4][6][0] = 0.7
    modules['lgns'][8][4][7][0] = 0.7
    modules['lgns'][8][4][8][0] = 0.7
    modules['lgns'][8][8][3][0] = 0.7
    modules['lgns'][8][8][4][0] = 0.7
    modules['lgns'][8][8][5][0] = 0.7
    modules['lgns'][8][8][6][0] = 0.7
    modules['lgns'][8][8][7][0] = 0.7
    modules['lgns'][8][8][8][0] = 0.7
    modules['lgns'][8][5][3][0] = 0.7
    modules['lgns'][8][6][3][0] = 0.7
    modules['lgns'][8][7][3][0] = 0.7
    modules['lgns'][8][5][8][0] = 0.7
    modules['lgns'][8][6][8][0] = 0.7
    modules['lgns'][8][7][8][0] = 0.7
                    
# What follows not is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 27900:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 28200:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.7
    modules['lgns'][8][3][1][0] = 0.7
    modules['lgns'][8][3][2][0] = 0.7
    modules['lgns'][8][3][3][0] = 0.7
    modules['lgns'][8][3][4][0] = 0.7
    modules['lgns'][8][3][5][0] = 0.7
    modules['lgns'][8][3][6][0] = 0.7
    modules['lgns'][8][3][7][0] = 0.7
    modules['lgns'][8][3][8][0] = 0.7
    modules['lgns'][8][2][6][0] = 0.7
    modules['lgns'][8][2][7][0] = 0.7
    modules['lgns'][8][1][6][0] = 0.7
    modules['lgns'][8][1][7][0] = 0.7
    modules['lgns'][8][0][6][0] = 0.7
    modules['lgns'][8][0][7][0] = 0.7
                     
# what follows now is an intertrial interval of 400 timesteps (2 second), which includes
# the response period.
if t == 28400:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.25
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05

# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 28800:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.32

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.7
    modules['lgns'][8][3][1][0] = 0.7
    modules['lgns'][8][3][2][0] = 0.7
    modules['lgns'][8][3][3][0] = 0.7
    modules['lgns'][8][3][4][0] = 0.7
    modules['lgns'][8][3][5][0] = 0.7
    modules['lgns'][8][3][6][0] = 0.7
    modules['lgns'][8][3][7][0] = 0.7
    modules['lgns'][8][3][8][0] = 0.7
    modules['lgns'][8][2][6][0] = 0.7
    modules['lgns'][8][2][7][0] = 0.7
    modules['lgns'][8][1][6][0] = 0.7
    modules['lgns'][8][1][7][0] = 0.7
    modules['lgns'][8][0][6][0] = 0.7
    modules['lgns'][8][0][7][0] = 0.7
    
# What follows is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 29000:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 29300:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.7
    modules['lgns'][8][3][1][0] = 0.7
    modules['lgns'][8][3][2][0] = 0.7
    modules['lgns'][8][3][3][0] = 0.7
    modules['lgns'][8][3][4][0] = 0.7
    modules['lgns'][8][3][5][0] = 0.7
    modules['lgns'][8][3][6][0] = 0.7
    modules['lgns'][8][3][7][0] = 0.7
    modules['lgns'][8][3][8][0] = 0.7
    modules['lgns'][8][2][6][0] = 0.7
    modules['lgns'][8][2][7][0] = 0.7
    modules['lgns'][8][1][6][0] = 0.7
    modules['lgns'][8][1][7][0] = 0.7
    modules['lgns'][8][0][6][0] = 0.7
    modules['lgns'][8][0][7][0] = 0.7

       
# what follows now is an intertrial interval of 400 timesteps (2 second), which includes
# the response period.
if t == 29500:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05

################# FIFTH CONTROL BLOCK OF 3 TRIALS (MATCH, MISMATCH, MATCH ###########
################# DEGRADED SHAPES ARE PRESENTED AND LOW ATTENTION IS USED ##############
# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 29900:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.05

    # reset D1 prior to each trial
    for x in range(modules['exss'][0]):
    	for y in range(modules['exss'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.54
    modules['lgns'][8][4][4][0] = 0.54
    modules['lgns'][8][4][5][0] = 0.54
    modules['lgns'][8][4][6][0] = 0.54
    modules['lgns'][8][4][7][0] = 0.54
    modules['lgns'][8][4][8][0] = 0.54
    modules['lgns'][8][8][3][0] = 0.54
    modules['lgns'][8][8][4][0] = 0.54
    modules['lgns'][8][8][5][0] = 0.54
    modules['lgns'][8][8][6][0] = 0.54
    modules['lgns'][8][8][7][0] = 0.54
    modules['lgns'][8][8][8][0] = 0.54
    modules['lgns'][8][5][3][0] = 0.54
    modules['lgns'][8][6][3][0] = 0.54
    modules['lgns'][8][7][3][0] = 0.54
    modules['lgns'][8][5][8][0] = 0.54
    modules['lgns'][8][6][8][0] = 0.54
    modules['lgns'][8][7][8][0] = 0.54    

# What follows now is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 30100:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 30400:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.54
    modules['lgns'][8][4][4][0] = 0.54
    modules['lgns'][8][4][5][0] = 0.54
    modules['lgns'][8][4][6][0] = 0.54
    modules['lgns'][8][4][7][0] = 0.54
    modules['lgns'][8][4][8][0] = 0.54
    modules['lgns'][8][8][3][0] = 0.54
    modules['lgns'][8][8][4][0] = 0.54
    modules['lgns'][8][8][5][0] = 0.54
    modules['lgns'][8][8][6][0] = 0.54
    modules['lgns'][8][8][7][0] = 0.54
    modules['lgns'][8][8][8][0] = 0.54
    modules['lgns'][8][5][3][0] = 0.54
    modules['lgns'][8][6][3][0] = 0.54
    modules['lgns'][8][7][3][0] = 0.54
    modules['lgns'][8][5][8][0] = 0.54
    modules['lgns'][8][6][8][0] = 0.54
    modules['lgns'][8][7][8][0] = 0.54

# what follows now is an intertrial interval of 400 timesteps (2 second), which includes
# the response period.
if t == 30600:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05

# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 31000:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.05

    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # reset LGNS activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following stimulus is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.54
    modules['lgns'][8][4][4][0] = 0.54
    modules['lgns'][8][4][5][0] = 0.54
    modules['lgns'][8][4][6][0] = 0.54
    modules['lgns'][8][4][7][0] = 0.54
    modules['lgns'][8][4][8][0] = 0.54
    modules['lgns'][8][8][3][0] = 0.54
    modules['lgns'][8][8][4][0] = 0.54
    modules['lgns'][8][8][5][0] = 0.54
    modules['lgns'][8][8][6][0] = 0.54
    modules['lgns'][8][8][7][0] = 0.54
    modules['lgns'][8][8][8][0] = 0.54
    modules['lgns'][8][5][3][0] = 0.54
    modules['lgns'][8][6][3][0] = 0.54
    modules['lgns'][8][7][3][0] = 0.54
    modules['lgns'][8][5][8][0] = 0.54
    modules['lgns'][8][6][8][0] = 0.54
    modules['lgns'][8][7][8][0] = 0.54
                
# What follows is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 31200:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 31500:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.54
    modules['lgns'][8][3][1][0] = 0.54
    modules['lgns'][8][3][2][0] = 0.54
    modules['lgns'][8][3][3][0] = 0.54
    modules['lgns'][8][3][4][0] = 0.54
    modules['lgns'][8][3][5][0] = 0.54
    modules['lgns'][8][3][6][0] = 0.54
    modules['lgns'][8][3][7][0] = 0.54
    modules['lgns'][8][3][8][0] = 0.54
    modules['lgns'][8][2][6][0] = 0.54
    modules['lgns'][8][2][7][0] = 0.54
    modules['lgns'][8][1][6][0] = 0.54
    modules['lgns'][8][1][7][0] = 0.54
    modules['lgns'][8][0][6][0] = 0.54
    modules['lgns'][8][0][7][0] = 0.54
    
# what follows now is an intertrial interval of 400 timesteps (1 second), which includes
# the response period.
if t == 31700:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05


# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 32100:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.05

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.54
    modules['lgns'][8][3][1][0] = 0.54
    modules['lgns'][8][3][2][0] = 0.54
    modules['lgns'][8][3][3][0] = 0.54
    modules['lgns'][8][3][4][0] = 0.54
    modules['lgns'][8][3][5][0] = 0.54
    modules['lgns'][8][3][6][0] = 0.54
    modules['lgns'][8][3][7][0] = 0.54
    modules['lgns'][8][3][8][0] = 0.54
    modules['lgns'][8][2][6][0] = 0.54
    modules['lgns'][8][2][7][0] = 0.54
    modules['lgns'][8][1][6][0] = 0.54
    modules['lgns'][8][1][7][0] = 0.54
    modules['lgns'][8][0][6][0] = 0.54
    modules['lgns'][8][0][7][0] = 0.54
                    
# What follows not is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 32300:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 32600:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.54
    modules['lgns'][8][3][1][0] = 0.54
    modules['lgns'][8][3][2][0] = 0.54
    modules['lgns'][8][3][3][0] = 0.54
    modules['lgns'][8][3][4][0] = 0.54
    modules['lgns'][8][3][5][0] = 0.54
    modules['lgns'][8][3][6][0] = 0.54
    modules['lgns'][8][3][7][0] = 0.54
    modules['lgns'][8][3][8][0] = 0.54
    modules['lgns'][8][2][6][0] = 0.54
    modules['lgns'][8][2][7][0] = 0.54
    modules['lgns'][8][1][6][0] = 0.54
    modules['lgns'][8][1][7][0] = 0.54
    modules['lgns'][8][0][6][0] = 0.54
    modules['lgns'][8][0][7][0] = 0.54
                     
# what follows now is an intertrial interval of 400 timesteps (2 second), which includes
# the response period.
if t == 32800:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05

######################################################################################
# SIXTH BLOCK OF 3 DMS TRIALS (MATCH, MISMATCH, MATCH)
######################################################################################
# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 33200:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.34

    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # reset LGNS activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following stimulus is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.7
    modules['lgns'][8][4][4][0] = 0.7
    modules['lgns'][8][4][5][0] = 0.7
    modules['lgns'][8][4][6][0] = 0.7
    modules['lgns'][8][4][7][0] = 0.7
    modules['lgns'][8][4][8][0] = 0.7
    modules['lgns'][8][8][3][0] = 0.7
    modules['lgns'][8][8][4][0] = 0.7
    modules['lgns'][8][8][5][0] = 0.7
    modules['lgns'][8][8][6][0] = 0.7
    modules['lgns'][8][8][7][0] = 0.7
    modules['lgns'][8][8][8][0] = 0.7
    modules['lgns'][8][5][3][0] = 0.7
    modules['lgns'][8][6][3][0] = 0.7
    modules['lgns'][8][7][3][0] = 0.7
    modules['lgns'][8][5][8][0] = 0.7
    modules['lgns'][8][6][8][0] = 0.7
    modules['lgns'][8][7][8][0] = 0.7
                
# What follows is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 33400:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 33700:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following stimuuls is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.7
    modules['lgns'][8][4][4][0] = 0.7
    modules['lgns'][8][4][5][0] = 0.7
    modules['lgns'][8][4][6][0] = 0.7
    modules['lgns'][8][4][7][0] = 0.7
    modules['lgns'][8][4][8][0] = 0.7
    modules['lgns'][8][8][3][0] = 0.7
    modules['lgns'][8][8][4][0] = 0.7
    modules['lgns'][8][8][5][0] = 0.7
    modules['lgns'][8][8][6][0] = 0.7
    modules['lgns'][8][8][7][0] = 0.7
    modules['lgns'][8][8][8][0] = 0.7
    modules['lgns'][8][5][3][0] = 0.7
    modules['lgns'][8][6][3][0] = 0.7
    modules['lgns'][8][7][3][0] = 0.7
    modules['lgns'][8][5][8][0] = 0.7
    modules['lgns'][8][6][8][0] = 0.7
    modules['lgns'][8][7][8][0] = 0.7
    
# what follows now is an intertrial interval of 400 timesteps (1 second), which includes
# the response period.
if t == 33900:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.25
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05


# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 34300:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.34

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.7
    modules['lgns'][8][4][4][0] = 0.7
    modules['lgns'][8][4][5][0] = 0.7
    modules['lgns'][8][4][6][0] = 0.7
    modules['lgns'][8][4][7][0] = 0.7
    modules['lgns'][8][4][8][0] = 0.7
    modules['lgns'][8][8][3][0] = 0.7
    modules['lgns'][8][8][4][0] = 0.7
    modules['lgns'][8][8][5][0] = 0.7
    modules['lgns'][8][8][6][0] = 0.7
    modules['lgns'][8][8][7][0] = 0.7
    modules['lgns'][8][8][8][0] = 0.7
    modules['lgns'][8][5][3][0] = 0.7
    modules['lgns'][8][6][3][0] = 0.7
    modules['lgns'][8][7][3][0] = 0.7
    modules['lgns'][8][5][8][0] = 0.7
    modules['lgns'][8][6][8][0] = 0.7
    modules['lgns'][8][7][8][0] = 0.7
                    
# What follows not is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 34500:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 34800:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.7
    modules['lgns'][8][3][1][0] = 0.7
    modules['lgns'][8][3][2][0] = 0.7
    modules['lgns'][8][3][3][0] = 0.7
    modules['lgns'][8][3][4][0] = 0.7
    modules['lgns'][8][3][5][0] = 0.7
    modules['lgns'][8][3][6][0] = 0.7
    modules['lgns'][8][3][7][0] = 0.7
    modules['lgns'][8][3][8][0] = 0.7
    modules['lgns'][8][2][6][0] = 0.7
    modules['lgns'][8][2][7][0] = 0.7
    modules['lgns'][8][1][6][0] = 0.7
    modules['lgns'][8][1][7][0] = 0.7
    modules['lgns'][8][0][6][0] = 0.7
    modules['lgns'][8][0][7][0] = 0.7
                     
# what follows now is an intertrial interval of 400 timesteps (2 second), which includes
# the response period.
if t == 35000:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.25
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05

# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 35400:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.34

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.7
    modules['lgns'][8][3][1][0] = 0.7
    modules['lgns'][8][3][2][0] = 0.7
    modules['lgns'][8][3][3][0] = 0.7
    modules['lgns'][8][3][4][0] = 0.7
    modules['lgns'][8][3][5][0] = 0.7
    modules['lgns'][8][3][6][0] = 0.7
    modules['lgns'][8][3][7][0] = 0.7
    modules['lgns'][8][3][8][0] = 0.7
    modules['lgns'][8][2][6][0] = 0.7
    modules['lgns'][8][2][7][0] = 0.7
    modules['lgns'][8][1][6][0] = 0.7
    modules['lgns'][8][1][7][0] = 0.7
    modules['lgns'][8][0][6][0] = 0.7
    modules['lgns'][8][0][7][0] = 0.7
    
# What follows is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 35600:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 35900:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.7
    modules['lgns'][8][3][1][0] = 0.7
    modules['lgns'][8][3][2][0] = 0.7
    modules['lgns'][8][3][3][0] = 0.7
    modules['lgns'][8][3][4][0] = 0.7
    modules['lgns'][8][3][5][0] = 0.7
    modules['lgns'][8][3][6][0] = 0.7
    modules['lgns'][8][3][7][0] = 0.7
    modules['lgns'][8][3][8][0] = 0.7
    modules['lgns'][8][2][6][0] = 0.7
    modules['lgns'][8][2][7][0] = 0.7
    modules['lgns'][8][1][6][0] = 0.7
    modules['lgns'][8][1][7][0] = 0.7
    modules['lgns'][8][0][6][0] = 0.7
    modules['lgns'][8][0][7][0] = 0.7

       
# what follows now is an intertrial interval of 400 timesteps (2 second), which includes
# the response period.
if t == 36100:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05

################# SIXTH CONTROL BLOCK OF 3 TRIALS (MATCH, MISMATCH, MATCH ###########
################# DEGRADED SHAPES ARE PRESENTED AND LOW ATTENTION IS USED ##############
# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 36500:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.05

    # reset D1 prior to each trial
    for x in range(modules['exss'][0]):
    	for y in range(modules['exss'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.54
    modules['lgns'][8][4][4][0] = 0.54
    modules['lgns'][8][4][5][0] = 0.54
    modules['lgns'][8][4][6][0] = 0.54
    modules['lgns'][8][4][7][0] = 0.54
    modules['lgns'][8][4][8][0] = 0.54
    modules['lgns'][8][8][3][0] = 0.54
    modules['lgns'][8][8][4][0] = 0.54
    modules['lgns'][8][8][5][0] = 0.54
    modules['lgns'][8][8][6][0] = 0.54
    modules['lgns'][8][8][7][0] = 0.54
    modules['lgns'][8][8][8][0] = 0.54
    modules['lgns'][8][5][3][0] = 0.54
    modules['lgns'][8][6][3][0] = 0.54
    modules['lgns'][8][7][3][0] = 0.54
    modules['lgns'][8][5][8][0] = 0.54
    modules['lgns'][8][6][8][0] = 0.54
    modules['lgns'][8][7][8][0] = 0.54    

# What follows now is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 36700:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 37000:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.54
    modules['lgns'][8][4][4][0] = 0.54
    modules['lgns'][8][4][5][0] = 0.54
    modules['lgns'][8][4][6][0] = 0.54
    modules['lgns'][8][4][7][0] = 0.54
    modules['lgns'][8][4][8][0] = 0.54
    modules['lgns'][8][8][3][0] = 0.54
    modules['lgns'][8][8][4][0] = 0.54
    modules['lgns'][8][8][5][0] = 0.54
    modules['lgns'][8][8][6][0] = 0.54
    modules['lgns'][8][8][7][0] = 0.54
    modules['lgns'][8][8][8][0] = 0.54
    modules['lgns'][8][5][3][0] = 0.54
    modules['lgns'][8][6][3][0] = 0.54
    modules['lgns'][8][7][3][0] = 0.54
    modules['lgns'][8][5][8][0] = 0.54
    modules['lgns'][8][6][8][0] = 0.54
    modules['lgns'][8][7][8][0] = 0.54

# what follows now is an intertrial interval of 400 timesteps (2 second), which includes
# the response period.
if t == 37200:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05

# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 37600:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.05

    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # reset LGNS activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following stimulus is an 'O' shape
    modules['lgns'][8][4][3][0] = 0.54
    modules['lgns'][8][4][4][0] = 0.54
    modules['lgns'][8][4][5][0] = 0.54
    modules['lgns'][8][4][6][0] = 0.54
    modules['lgns'][8][4][7][0] = 0.54
    modules['lgns'][8][4][8][0] = 0.54
    modules['lgns'][8][8][3][0] = 0.54
    modules['lgns'][8][8][4][0] = 0.54
    modules['lgns'][8][8][5][0] = 0.54
    modules['lgns'][8][8][6][0] = 0.54
    modules['lgns'][8][8][7][0] = 0.54
    modules['lgns'][8][8][8][0] = 0.54
    modules['lgns'][8][5][3][0] = 0.54
    modules['lgns'][8][6][3][0] = 0.54
    modules['lgns'][8][7][3][0] = 0.54
    modules['lgns'][8][5][8][0] = 0.54
    modules['lgns'][8][6][8][0] = 0.54
    modules['lgns'][8][7][8][0] = 0.54
                
# What follows is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 37800:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 38100:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.54
    modules['lgns'][8][3][1][0] = 0.54
    modules['lgns'][8][3][2][0] = 0.54
    modules['lgns'][8][3][3][0] = 0.54
    modules['lgns'][8][3][4][0] = 0.54
    modules['lgns'][8][3][5][0] = 0.54
    modules['lgns'][8][3][6][0] = 0.54
    modules['lgns'][8][3][7][0] = 0.54
    modules['lgns'][8][3][8][0] = 0.54
    modules['lgns'][8][2][6][0] = 0.54
    modules['lgns'][8][2][7][0] = 0.54
    modules['lgns'][8][1][6][0] = 0.54
    modules['lgns'][8][1][7][0] = 0.54
    modules['lgns'][8][0][6][0] = 0.54
    modules['lgns'][8][0][7][0] = 0.54
    
# what follows now is an intertrial interval of 400 timesteps (1 second), which includes
# the response period.
if t == 38300:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05


# now we present S1 by manually inserting it into the MGN module and leaving S1 there
# for 200 timesteps (1 second).
if t == 38700:

    # turn attention to 'HI', as the input stimulus has just been presented
    modules['atts'][8][0][0][0] = 0.05

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.54
    modules['lgns'][8][3][1][0] = 0.54
    modules['lgns'][8][3][2][0] = 0.54
    modules['lgns'][8][3][3][0] = 0.54
    modules['lgns'][8][3][4][0] = 0.54
    modules['lgns'][8][3][5][0] = 0.54
    modules['lgns'][8][3][6][0] = 0.54
    modules['lgns'][8][3][7][0] = 0.54
    modules['lgns'][8][3][8][0] = 0.54
    modules['lgns'][8][2][6][0] = 0.54
    modules['lgns'][8][2][7][0] = 0.54
    modules['lgns'][8][1][6][0] = 0.54
    modules['lgns'][8][1][7][0] = 0.54
    modules['lgns'][8][0][6][0] = 0.54
    modules['lgns'][8][0][7][0] = 0.54
                    
# What follows not is a DELAY period of 300 timesteps = 1.5 seconds 
if t == 38900:

    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

# ... and now, present S2 for 200 timesteps (1 second) 
if t == 39200:

    # reset LGN activity prior to stimulus presentation
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # insert the inputs stimulus into LGN and see what happens
    # the following is an 'T' shape
    modules['lgns'][8][3][0][0] = 0.54
    modules['lgns'][8][3][1][0] = 0.54
    modules['lgns'][8][3][2][0] = 0.54
    modules['lgns'][8][3][3][0] = 0.54
    modules['lgns'][8][3][4][0] = 0.54
    modules['lgns'][8][3][5][0] = 0.54
    modules['lgns'][8][3][6][0] = 0.54
    modules['lgns'][8][3][7][0] = 0.54
    modules['lgns'][8][3][8][0] = 0.54
    modules['lgns'][8][2][6][0] = 0.54
    modules['lgns'][8][2][7][0] = 0.54
    modules['lgns'][8][1][6][0] = 0.54
    modules['lgns'][8][1][7][0] = 0.54
    modules['lgns'][8][0][6][0] = 0.54
    modules['lgns'][8][0][7][0] = 0.54
                     
# what follows now is a response period of 200 timesteps (2 second), which includes
# the response period.
if t == 39400:
             
    # reset D1 prior to each trial
    for x in range(modules['efd1'][0]):
    	for y in range(modules['efd1'][1]):
	    modules['efd1'][8][x][y][0] = 0.2
	    
    # turn off input stimulus but leave small level of activity there
    for x in range(modules['lgns'][0]):
        for y in range(modules['lgns'][1]):
            modules['lgns'][8][x][y][0] = 0.05

    # turn attention to 'LO', as the current trial has ended
    modules['atts'][8][0][0][0] = 0.05
